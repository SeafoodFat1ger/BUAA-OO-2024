{
    "1": [
        "-ask2checkOut(guestName: String, roomId: int): void",
        "+checkOut(roomId: int): void",
        "-workerName: String",
        "Dispatcher",
        "finishClean",
        "isCleanOperation()"
    ],
    "2": [
        "DIS_REC_CHECKIN_FAILED",
        "replyCheckOut(request);",
        "arrangeClean4CheckOut(request);",
        "arrangeCleanOnly(Request request)",
        "RoomState.OCCUPIED",
        "RequestTag.DIS_CLE_CLEAN_CHECKOUT.equals(request.getRequestTag())"
    ],
    "3": "高内聚、低耦合我认为是指类与类之间尽可能独立，关系简单只进行简单通信；在本实验的迭代中封装Request类，并将Dispatcher中字符串数组roomStateTable封装成一个RoomTable类，都体现了增强模块独立性的思想；而迭代后Controller只控制RequestList，Work自己取出自己的RequestList工作，类与类之间关系简单，体现高内聚低耦合"
}